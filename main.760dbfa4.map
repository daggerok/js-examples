{"version":3,"sources":["../node_modules/x-is-array/index.js","../node_modules/virtual-dom/vnode/version.js","../node_modules/virtual-dom/vnode/vpatch.js","../node_modules/virtual-dom/vnode/is-vnode.js","../node_modules/virtual-dom/vnode/is-vtext.js","../node_modules/virtual-dom/vnode/is-widget.js","../node_modules/virtual-dom/vnode/is-thunk.js","../node_modules/virtual-dom/vnode/handle-thunk.js","../node_modules/is-object/index.js","../node_modules/virtual-dom/vnode/is-vhook.js","../node_modules/virtual-dom/vtree/diff-props.js","../node_modules/virtual-dom/vtree/diff.js","../node_modules/virtual-dom/diff.js","../node_modules/global/document.js","../node_modules/virtual-dom/vdom/apply-properties.js","../node_modules/virtual-dom/vdom/create-element.js","../node_modules/virtual-dom/vdom/dom-index.js","../node_modules/virtual-dom/vdom/update-widget.js","../node_modules/virtual-dom/vdom/patch-op.js","../node_modules/virtual-dom/vdom/patch.js","../node_modules/virtual-dom/patch.js","../node_modules/virtual-dom/vnode/vnode.js","../node_modules/virtual-dom/vnode/vtext.js","../node_modules/virtual-dom/node_modules/browser-split/index.js","../node_modules/virtual-dom/virtual-hyperscript/parse-tag.js","../node_modules/virtual-dom/virtual-hyperscript/hooks/soft-set-hook.js","../node_modules/individual/index.js","../node_modules/individual/one-version.js","../node_modules/ev-store/index.js","../node_modules/virtual-dom/virtual-hyperscript/hooks/ev-hook.js","../node_modules/virtual-dom/virtual-hyperscript/index.js","../node_modules/virtual-dom/h.js","../node_modules/virtual-dom/create-element.js","../node_modules/virtual-dom/index.js","app/Commands.js","app/Bootstrap.js","app/Model.js","0","app/Storage.js","../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry1.js","../node_modules/ramda/es/always.js","../node_modules/ramda/es/F.js","../node_modules/ramda/es/T.js","../node_modules/ramda/es/__.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/ramda/es/add.js","../node_modules/ramda/es/internal/_concat.js","../node_modules/ramda/es/internal/_arity.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/addIndex.js","../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/adjust.js","../node_modules/ramda/es/internal/_isArray.js","../node_modules/ramda/es/internal/_isTransformer.js","../node_modules/ramda/es/internal/_dispatchable.js","../node_modules/ramda/es/internal/_reduced.js","../node_modules/ramda/es/internal/_xfBase.js","../node_modules/ramda/es/internal/_xall.js","../node_modules/ramda/es/all.js","../node_modules/ramda/es/max.js","../node_modules/ramda/es/internal/_map.js","../node_modules/ramda/es/internal/_isString.js","../node_modules/ramda/es/internal/_isArrayLike.js","../node_modules/ramda/es/internal/_xwrap.js","../node_modules/ramda/es/bind.js","../node_modules/ramda/es/internal/_reduce.js","../node_modules/ramda/es/internal/_xmap.js","../node_modules/ramda/es/internal/_has.js","../node_modules/ramda/es/internal/_isArguments.js","../node_modules/ramda/es/keys.js","../node_modules/ramda/es/map.js","../node_modules/ramda/es/path.js","../node_modules/ramda/es/prop.js","../node_modules/ramda/es/pluck.js","../node_modules/ramda/es/reduce.js","../node_modules/ramda/es/allPass.js","../node_modules/ramda/es/and.js","../node_modules/ramda/es/internal/_xany.js","../node_modules/ramda/es/any.js","../node_modules/ramda/es/anyPass.js","../node_modules/ramda/es/ap.js","../node_modules/ramda/es/internal/_aperture.js","../node_modules/ramda/es/internal/_xaperture.js","../node_modules/ramda/es/aperture.js","../node_modules/ramda/es/append.js","../node_modules/ramda/es/apply.js","../node_modules/ramda/es/values.js","../node_modules/ramda/es/applySpec.js","../node_modules/ramda/es/applyTo.js","../node_modules/ramda/es/ascend.js","../node_modules/ramda/es/assoc.js","../node_modules/ramda/es/internal/_isInteger.js","../node_modules/ramda/es/isNil.js","../node_modules/ramda/es/assocPath.js","../node_modules/ramda/es/nAry.js","../node_modules/ramda/es/binary.js","../node_modules/ramda/es/internal/_isFunction.js","../node_modules/ramda/es/liftN.js","../node_modules/ramda/es/lift.js","../node_modules/ramda/es/both.js","../node_modules/ramda/es/curry.js","../node_modules/ramda/es/call.js","../node_modules/ramda/es/internal/_makeFlat.js","../node_modules/ramda/es/internal/_forceReduced.js","../node_modules/ramda/es/internal/_flatCat.js","../node_modules/ramda/es/internal/_xchain.js","../node_modules/ramda/es/chain.js","../node_modules/ramda/es/clamp.js","../node_modules/ramda/es/internal/_cloneRegExp.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_clone.js","../node_modules/ramda/es/clone.js","../node_modules/ramda/es/comparator.js","../node_modules/ramda/es/not.js","../node_modules/ramda/es/complement.js","../node_modules/ramda/es/internal/_pipe.js","../node_modules/ramda/es/internal/_checkForMethod.js","../node_modules/ramda/es/slice.js","../node_modules/ramda/es/tail.js","../node_modules/ramda/es/pipe.js","../node_modules/ramda/es/reverse.js","../node_modules/ramda/es/compose.js","../node_modules/ramda/es/composeK.js","../node_modules/ramda/es/internal/_pipeP.js","../node_modules/ramda/es/pipeP.js","../node_modules/ramda/es/composeP.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_containsWith.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/identical.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/internal/_indexOf.js","../node_modules/ramda/es/internal/_contains.js","../node_modules/ramda/es/internal/_quote.js","../node_modules/ramda/es/internal/_toISOString.js","../node_modules/ramda/es/internal/_complement.js","../node_modules/ramda/es/internal/_filter.js","../node_modules/ramda/es/internal/_isObject.js","../node_modules/ramda/es/internal/_xfilter.js","../node_modules/ramda/es/filter.js","../node_modules/ramda/es/reject.js","../node_modules/ramda/es/internal/_toString.js","../node_modules/ramda/es/toString.js","../node_modules/ramda/es/concat.js","../node_modules/ramda/es/cond.js","../node_modules/ramda/es/constructN.js","../node_modules/ramda/es/construct.js","../node_modules/ramda/es/contains.js","../node_modules/ramda/es/converge.js","../node_modules/ramda/es/internal/_xreduceBy.js","../node_modules/ramda/es/reduceBy.js","../node_modules/ramda/es/countBy.js","../node_modules/ramda/es/dec.js","../node_modules/ramda/es/defaultTo.js","../node_modules/ramda/es/descend.js","../node_modules/ramda/es/difference.js","../node_modules/ramda/es/differenceWith.js","../node_modules/ramda/es/dissoc.js","../node_modules/ramda/es/remove.js","../node_modules/ramda/es/update.js","../node_modules/ramda/es/dissocPath.js","../node_modules/ramda/es/divide.js","../node_modules/ramda/es/internal/_xdrop.js","../node_modules/ramda/es/drop.js","../node_modules/ramda/es/internal/_xtake.js","../node_modules/ramda/es/take.js","../node_modules/ramda/es/internal/_dropLast.js","../node_modules/ramda/es/internal/_xdropLast.js","../node_modules/ramda/es/dropLast.js","../node_modules/ramda/es/internal/_dropLastWhile.js","../node_modules/ramda/es/internal/_xdropLastWhile.js","../node_modules/ramda/es/dropLastWhile.js","../node_modules/ramda/es/internal/_xdropRepeatsWith.js","../node_modules/ramda/es/nth.js","../node_modules/ramda/es/last.js","../node_modules/ramda/es/dropRepeatsWith.js","../node_modules/ramda/es/dropRepeats.js","../node_modules/ramda/es/internal/_xdropWhile.js","../node_modules/ramda/es/dropWhile.js","../node_modules/ramda/es/or.js","../node_modules/ramda/es/either.js","../node_modules/ramda/es/empty.js","../node_modules/ramda/es/takeLast.js","../node_modules/ramda/es/endsWith.js","../node_modules/ramda/es/eqBy.js","../node_modules/ramda/es/eqProps.js","../node_modules/ramda/es/evolve.js","../node_modules/ramda/es/internal/_xfind.js","../node_modules/ramda/es/find.js","../node_modules/ramda/es/internal/_xfindIndex.js","../node_modules/ramda/es/findIndex.js","../node_modules/ramda/es/internal/_xfindLast.js","../node_modules/ramda/es/findLast.js","../node_modules/ramda/es/internal/_xfindLastIndex.js","../node_modules/ramda/es/findLastIndex.js","../node_modules/ramda/es/flatten.js","../node_modules/ramda/es/flip.js","../node_modules/ramda/es/forEach.js","../node_modules/ramda/es/forEachObjIndexed.js","../node_modules/ramda/es/fromPairs.js","../node_modules/ramda/es/groupBy.js","../node_modules/ramda/es/groupWith.js","../node_modules/ramda/es/gt.js","../node_modules/ramda/es/gte.js","../node_modules/ramda/es/has.js","../node_modules/ramda/es/hasIn.js","../node_modules/ramda/es/head.js","../node_modules/ramda/es/internal/_identity.js","../node_modules/ramda/es/identity.js","../node_modules/ramda/es/ifElse.js","../node_modules/ramda/es/inc.js","../node_modules/ramda/es/indexBy.js","../node_modules/ramda/es/indexOf.js","../node_modules/ramda/es/init.js","../node_modules/ramda/es/innerJoin.js","../node_modules/ramda/es/insert.js","../node_modules/ramda/es/insertAll.js","../node_modules/ramda/es/internal/_Set.js","../node_modules/ramda/es/uniqBy.js","../node_modules/ramda/es/uniq.js","../node_modules/ramda/es/intersection.js","../node_modules/ramda/es/intersperse.js","../node_modules/ramda/es/internal/_objectAssign.js","../node_modules/ramda/es/internal/_assign.js","../node_modules/ramda/es/objOf.js","../node_modules/ramda/es/internal/_stepCat.js","../node_modules/ramda/es/into.js","../node_modules/ramda/es/invert.js","../node_modules/ramda/es/invertObj.js","../node_modules/ramda/es/invoker.js","../node_modules/ramda/es/is.js","../node_modules/ramda/es/isEmpty.js","../node_modules/ramda/es/join.js","../node_modules/ramda/es/juxt.js","../node_modules/ramda/es/keysIn.js","../node_modules/ramda/es/lastIndexOf.js","../node_modules/ramda/es/internal/_isNumber.js","../node_modules/ramda/es/length.js","../node_modules/ramda/es/lens.js","../node_modules/ramda/es/lensIndex.js","../node_modules/ramda/es/lensPath.js","../node_modules/ramda/es/lensProp.js","../node_modules/ramda/es/lt.js","../node_modules/ramda/es/lte.js","../node_modules/ramda/es/mapAccum.js","../node_modules/ramda/es/mapAccumRight.js","../node_modules/ramda/es/mapObjIndexed.js","../node_modules/ramda/es/match.js","../node_modules/ramda/es/mathMod.js","../node_modules/ramda/es/maxBy.js","../node_modules/ramda/es/sum.js","../node_modules/ramda/es/mean.js","../node_modules/ramda/es/median.js","../node_modules/ramda/es/memoizeWith.js","../node_modules/ramda/es/memoize.js","../node_modules/ramda/es/merge.js","../node_modules/ramda/es/mergeAll.js","../node_modules/ramda/es/mergeWithKey.js","../node_modules/ramda/es/mergeDeepWithKey.js","../node_modules/ramda/es/mergeDeepLeft.js","../node_modules/ramda/es/mergeDeepRight.js","../node_modules/ramda/es/mergeDeepWith.js","../node_modules/ramda/es/mergeWith.js","../node_modules/ramda/es/min.js","../node_modules/ramda/es/minBy.js","../node_modules/ramda/es/modulo.js","../node_modules/ramda/es/multiply.js","../node_modules/ramda/es/negate.js","../node_modules/ramda/es/none.js","../node_modules/ramda/es/nthArg.js","../node_modules/ramda/es/o.js","../node_modules/ramda/es/internal/_of.js","../node_modules/ramda/es/of.js","../node_modules/ramda/es/omit.js","../node_modules/ramda/es/once.js","../node_modules/ramda/es/over.js","../node_modules/ramda/es/pair.js","../node_modules/ramda/es/internal/_createPartialApplicator.js","../node_modules/ramda/es/partial.js","../node_modules/ramda/es/partialRight.js","../node_modules/ramda/es/partition.js","../node_modules/ramda/es/pathEq.js","../node_modules/ramda/es/pathOr.js","../node_modules/ramda/es/pathSatisfies.js","../node_modules/ramda/es/pick.js","../node_modules/ramda/es/pickAll.js","../node_modules/ramda/es/pickBy.js","../node_modules/ramda/es/pipeK.js","../node_modules/ramda/es/prepend.js","../node_modules/ramda/es/product.js","../node_modules/ramda/es/useWith.js","../node_modules/ramda/es/project.js","../node_modules/ramda/es/propEq.js","../node_modules/ramda/es/propIs.js","../node_modules/ramda/es/propOr.js","../node_modules/ramda/es/propSatisfies.js","../node_modules/ramda/es/props.js","../node_modules/ramda/es/range.js","../node_modules/ramda/es/reduceRight.js","../node_modules/ramda/es/reduceWhile.js","../node_modules/ramda/es/reduced.js","../node_modules/ramda/es/times.js","../node_modules/ramda/es/repeat.js","../node_modules/ramda/es/replace.js","../node_modules/ramda/es/scan.js","../node_modules/ramda/es/sequence.js","../node_modules/ramda/es/set.js","../node_modules/ramda/es/sort.js","../node_modules/ramda/es/sortBy.js","../node_modules/ramda/es/sortWith.js","../node_modules/ramda/es/split.js","../node_modules/ramda/es/splitAt.js","../node_modules/ramda/es/splitEvery.js","../node_modules/ramda/es/splitWhen.js","../node_modules/ramda/es/startsWith.js","../node_modules/ramda/es/subtract.js","../node_modules/ramda/es/symmetricDifference.js","../node_modules/ramda/es/symmetricDifferenceWith.js","../node_modules/ramda/es/takeLastWhile.js","../node_modules/ramda/es/internal/_xtakeWhile.js","../node_modules/ramda/es/takeWhile.js","../node_modules/ramda/es/internal/_xtap.js","../node_modules/ramda/es/tap.js","../node_modules/ramda/es/internal/_isRegExp.js","../node_modules/ramda/es/test.js","../node_modules/ramda/es/toLower.js","../node_modules/ramda/es/toPairs.js","../node_modules/ramda/es/toPairsIn.js","../node_modules/ramda/es/toUpper.js","../node_modules/ramda/es/transduce.js","../node_modules/ramda/es/transpose.js","../node_modules/ramda/es/traverse.js","../node_modules/ramda/es/trim.js","../node_modules/ramda/es/tryCatch.js","../node_modules/ramda/es/unapply.js","../node_modules/ramda/es/unary.js","../node_modules/ramda/es/uncurryN.js","../node_modules/ramda/es/unfold.js","../node_modules/ramda/es/union.js","../node_modules/ramda/es/uniqWith.js","../node_modules/ramda/es/unionWith.js","../node_modules/ramda/es/unless.js","../node_modules/ramda/es/unnest.js","../node_modules/ramda/es/until.js","../node_modules/ramda/es/valuesIn.js","../node_modules/ramda/es/view.js","../node_modules/ramda/es/when.js","../node_modules/ramda/es/where.js","../node_modules/ramda/es/whereEq.js","../node_modules/ramda/es/without.js","../node_modules/ramda/es/xprod.js","../node_modules/ramda/es/zip.js","../node_modules/ramda/es/zipObj.js","../node_modules/ramda/es/zipWith.js","../node_modules/ramda/es/index.js","app/Reducer.js","../node_modules/hyperscript-helpers/dist/index.js","app/View.js","main.js"],"names":["setMealCommand","setCaloriesCommand","hideFormCommand","showFormCommand","types","Object","freeze","storeLocalStorageStateCommand","STORE_STATE","saveMealCommand","SAVE_MEAL","meal","SET_MEAL","calories","SET_CALORIES","showForm","TOGGLE_FORM","bootstrap","initialState","view","reduce","node","state","currentView","dispatch","virtualNode","type","newState","newView","patches","appendChild","addEventListener","module","exports","homepage","name","version","description","main","scripts","predev","dev","dev:watch","dev:serve","start","clean","prebuild","build","test","predeploy","predeploy:clean","predeploy:build","predeploy:base-href","predeploy:gh-pages-404","predeploy:nojekyll","deploy","keywords","author","license","devDependencies","@types/hyperscript","@types/ramda","babel-preset-env","babel-preset-stage-0","gh-pages","ncp","npm-run-all","parcel-bundler","rimraf","dependencies","css-reset-and-normalize-sass","hyperscript","hyperscript-helpers","ramda","tachyons","virtual-dom","_key","fallback","json","JSON","stringify","getStorage","parse","localStorage","getItem","setStorage","setItem","_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","always","val","F","T","_curry2","f2","b","_b","_a","add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combinedIdx","combined","argsIdx","left","curryN","addIndex","origFn","list","args","Array","prototype","slice","call","_curry3","f3","c","_c","adjust","_idx","_list","isArray","toString","_isTransformer","obj","_dispatchable","methodNames","xf","pop","transducer","_reduced","x","_xall","XAll","f","all","_xfBase","init","input","max","_map","functor","len","_isString","_isArrayLike","nodeType","hasOwnProperty","_xwrap","XWrap","acc","bind","thisObj","_reduce","_arrayReduce","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","TypeError","_xmap","XMap","_has","prop","_isArguments","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","_keys","nIdx","ks","checkArgsLength","map","key","path","paths","p","pluck","allPass","preds","and","_xany","XAny","any","anyPass","ap","applyF","applyX","_aperture","limit","_xaperture","XAperture","pos","full","store","getCopy","aperture","append","el","values","props","vals","applySpec","spec","v","applyTo","ascend","aa","bb","assoc","isInteger","isNil","assocPath","nextObj","arr","concat","nAry","binary","_isFunction","liftN","arity","lifted","lift","both","g","curry","_makeFlat","recursive","flatt","jlen","j","ilen","_forceReduced","_flatCat","preservingReduced","ret","rxf","_xchain","chain","monad","clamp","min","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","clone","comparator","pred","not","complement","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","reverse","split","join","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","_arrayFromIterator","push","_containsWith","_functionName","match","String","identical","_equals","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","equals","constructor","message","size","entries","keysA","extendedStackA","extendedStackB","_indexOf","inf","indexOf","_contains","_quote","s","replace","_toISOString","pad","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter","XFilter","filter","filterable","reject","_toString","seen","recur","y","xs","mapPairs","k","sort","isNaN","NaN","repr","cond","pairs","pair","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","construct","converge","after","fns","context","_xreduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","reduceBy","elt","countBy","elem","dec","defaultTo","descend","difference","first","second","out","firstLen","differenceWith","dissoc","remove","count","splice","update","dissocPath","head","divide","_xdrop","XDrop","drop","Math","_xtake","XTake","i","take","dropLast","_xdropLast","XDropLast","_dropLast","dropLastWhile","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_dropLastWhile","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","nth","offset","charAt","dropRepeatsWith","dropRepeats","_xdropWhile","XDropWhile","dropWhile","or","either","empty","takeLast","endsWith","suffix","eqBy","eqProps","obj1","obj2","evolve","transformations","object","transformation","_xfind","XFind","found","find","_xfindIndex","XFindIndex","findIndex","_xfindLast","XFindLast","findLast","_xfindLastIndex","XFindLastIndex","lastIdx","findLastIndex","flatten","flip","forEach","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","has","hasIn","_identity","identity","ifElse","condition","onTrue","onFalse","inc","indexBy","target","innerJoin","ys","insert","insertAll","elts","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","bIdx","uniqBy","appliedItem","uniq","intersection","list1","list2","lookupList","filteredList","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","into","invert","invertObj","invoker","method","is","Ctor","isEmpty","juxt","keysIn","lastIndexOf","_isNumber","lens","getter","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","str","mathMod","m","maxBy","sum","mean","median","width","memoizeWith","mFn","cache","memoize","merge","l","r","mergeAll","_assign","mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","_","_l","_r","minBy","modulo","multiply","negate","none","nthArg","o","_of","of","omit","names","index","once","called","over","Identity","fst","snd","_createPartialApplicator","partial","partialRight","partition","pathEq","_path","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","pipeK","prepend","product","useWith","transformers","project","propEq","propIs","propOr","propSatisfies","ps","range","from","to","reduceRight","reduceWhile","reduced","times","RangeError","repeat","regex","replacement","scan","sequence","traversable","sortBy","sortWith","splitAt","array","splitEvery","splitWhen","prefix","startsWith","subtract","symmetricDifference","symmetricDifferenceWith","takeLastWhile","_xtakeWhile","XTakeWhile","takeWhile","_xtap","XTap","tap","_isRegExp","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","traverse","trim","ws","zeroWidth","hasProtoTrim","_trim","beginRx","endRx","tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","union","uniqWith","unionWith","unless","whenFalseFn","unnest","until","valuesIn","vs","Const","when","whenTrueFn","where","testObj","whereEq","without","xprod","zip","rv","zipObj","zipWith","default","R","command","parseInt","mealToSave","caloriesToSave","meals","nextId","isInvalidState","nextIdToSave","h","div","h1","hr","button","form","label","pre","fieldSetView","labelText","inputValue","oninput","className","buttonSetView","formView","onsubmit","preventDefault","app","document","querySelector"],"mappings":"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","file":"main.760dbfa4.map","sourceRoot":"../src","sourcesContent":["var nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n","module.exports = \"2\"\n","var version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n","var version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n","var version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n","module.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n","module.exports = isThunk\r\n\r\nfunction isThunk(t) {\r\n    return t && t.type === \"Thunk\"\r\n}\r\n","var isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n","\"use strict\";\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === \"object\" && x !== null;\n};\n","module.exports = isHook\n\nfunction isHook(hook) {\n    return hook &&\n      (typeof hook.hook === \"function\" && !hook.hasOwnProperty(\"hook\") ||\n       typeof hook.unhook === \"function\" && !hook.hasOwnProperty(\"unhook\"))\n}\n","var isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook\")\n\nmodule.exports = diffProps\n\nfunction diffProps(a, b) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (aValue === bValue) {\n            continue\n        } else if (isObject(aValue) && isObject(bValue)) {\n            if (getPrototype(bValue) !== getPrototype(aValue)) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            } else if (isHook(bValue)) {\n                 diff = diff || {}\n                 diff[aKey] = bValue\n            } else {\n                var objectDiff = diffProps(aValue, bValue)\n                if (objectDiff) {\n                    diff = diff || {}\n                    diff[aKey] = objectDiff\n                }\n            }\n        } else {\n            diff = diff || {}\n            diff[aKey] = bValue\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(value)\n  } else if (value.__proto__) {\n    return value.__proto__\n  } else if (value.constructor) {\n    return value.constructor.prototype\n  }\n}\n","var isArray = require(\"x-is-array\")\n\nvar VPatch = require(\"../vnode/vpatch\")\nvar isVNode = require(\"../vnode/is-vnode\")\nvar isVText = require(\"../vnode/is-vtext\")\nvar isWidget = require(\"../vnode/is-widget\")\nvar isThunk = require(\"../vnode/is-thunk\")\nvar handleThunk = require(\"../vnode/handle-thunk\")\n\nvar diffProps = require(\"./diff-props\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        return\n    }\n\n    var apply = patch[index]\n    var applyClear = false\n\n    if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (b == null) {\n\n        // If a is a widget we will add a remove patch for it\n        // Otherwise any child widgets/hooks must be destroyed.\n        // This prevents adding two remove patches for a widget.\n        if (!isWidget(a)) {\n            clearState(a, patch, index)\n            apply = patch[index]\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                applyClear = true\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            applyClear = true\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            applyClear = true\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        if (!isWidget(a)) {\n            applyClear = true\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n\n    if (applyClear) {\n        clearState(a, patch, index)\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var orderedSet = reorder(aChildren, b.children)\n    var bChildren = orderedSet.children\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (orderedSet.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(\n            VPatch.ORDER,\n            a,\n            orderedSet.moves\n        ))\n    }\n\n    return apply\n}\n\nfunction clearState(vNode, patch, index) {\n    // TODO: Make this a single walk, not two\n    unhook(vNode, patch, index)\n    destroyWidgets(vNode, patch, index)\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(VPatch.REMOVE, vNode, null)\n            )\n        }\n    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b)\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true\n        }\n    }\n\n    return false\n}\n\n// Execute hooks when two nodes are identical\nfunction unhook(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(\n                    VPatch.PROPS,\n                    vNode,\n                    undefinedKeys(vNode.hooks)\n                )\n            )\n        }\n\n        if (vNode.descendantHooks || vNode.hasThunks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                unhook(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\nfunction undefinedKeys(obj) {\n    var result = {}\n\n    for (var key in obj) {\n        result[key] = undefined\n    }\n\n    return result\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n    // O(M) time, O(M) memory\n    var bChildIndex = keyIndex(bChildren)\n    var bKeys = bChildIndex.keys\n    var bFree = bChildIndex.free\n\n    if (bFree.length === bChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(N) time, O(N) memory\n    var aChildIndex = keyIndex(aChildren)\n    var aKeys = aChildIndex.keys\n    var aFree = aChildIndex.free\n\n    if (aFree.length === aChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(MAX(N, M)) memory\n    var newChildren = []\n\n    var freeIndex = 0\n    var freeCount = bFree.length\n    var deletedItems = 0\n\n    // Iterate through a and match a node in b\n    // O(N) time,\n    for (var i = 0 ; i < aChildren.length; i++) {\n        var aItem = aChildren[i]\n        var itemIndex\n\n        if (aItem.key) {\n            if (bKeys.hasOwnProperty(aItem.key)) {\n                // Match up the old keys\n                itemIndex = bKeys[aItem.key]\n                newChildren.push(bChildren[itemIndex])\n\n            } else {\n                // Remove old keyed items\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        } else {\n            // Match the item in a with the next free item in b\n            if (freeIndex < freeCount) {\n                itemIndex = bFree[freeIndex++]\n                newChildren.push(bChildren[itemIndex])\n            } else {\n                // There are no free items in b to match with\n                // the free items in a, so the extra free nodes\n                // are deleted.\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        }\n    }\n\n    var lastFreeIndex = freeIndex >= bFree.length ?\n        bChildren.length :\n        bFree[freeIndex]\n\n    // Iterate through b and append any new keys\n    // O(M) time\n    for (var j = 0; j < bChildren.length; j++) {\n        var newItem = bChildren[j]\n\n        if (newItem.key) {\n            if (!aKeys.hasOwnProperty(newItem.key)) {\n                // Add any new keyed items\n                // We are adding new items to the end and then sorting them\n                // in place. In future we should insert new items in place.\n                newChildren.push(newItem)\n            }\n        } else if (j >= lastFreeIndex) {\n            // Add any leftover non-keyed items\n            newChildren.push(newItem)\n        }\n    }\n\n    var simulate = newChildren.slice()\n    var simulateIndex = 0\n    var removes = []\n    var inserts = []\n    var simulateItem\n\n    for (var k = 0; k < bChildren.length;) {\n        var wantedItem = bChildren[k]\n        simulateItem = simulate[simulateIndex]\n\n        // remove items\n        while (simulateItem === null && simulate.length) {\n            removes.push(remove(simulate, simulateIndex, null))\n            simulateItem = simulate[simulateIndex]\n        }\n\n        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n            // if we need a key in this position...\n            if (wantedItem.key) {\n                if (simulateItem && simulateItem.key) {\n                    // if an insert doesn't put this key in place, it needs to move\n                    if (bKeys[simulateItem.key] !== k + 1) {\n                        removes.push(remove(simulate, simulateIndex, simulateItem.key))\n                        simulateItem = simulate[simulateIndex]\n                        // if the remove didn't put the wanted item in place, we need to insert it\n                        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n                            inserts.push({key: wantedItem.key, to: k})\n                        }\n                        // items are matching, so skip ahead\n                        else {\n                            simulateIndex++\n                        }\n                    }\n                    else {\n                        inserts.push({key: wantedItem.key, to: k})\n                    }\n                }\n                else {\n                    inserts.push({key: wantedItem.key, to: k})\n                }\n                k++\n            }\n            // a key in simulate has no matching wanted key, remove it\n            else if (simulateItem && simulateItem.key) {\n                removes.push(remove(simulate, simulateIndex, simulateItem.key))\n            }\n        }\n        else {\n            simulateIndex++\n            k++\n        }\n    }\n\n    // remove all the remaining nodes from simulate\n    while(simulateIndex < simulate.length) {\n        simulateItem = simulate[simulateIndex]\n        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))\n    }\n\n    // If the only moves we have are deletes then we can just\n    // let the delete patch remove these items.\n    if (removes.length === deletedItems && !inserts.length) {\n        return {\n            children: newChildren,\n            moves: null\n        }\n    }\n\n    return {\n        children: newChildren,\n        moves: {\n            removes: removes,\n            inserts: inserts\n        }\n    }\n}\n\nfunction remove(arr, index, key) {\n    arr.splice(index, 1)\n\n    return {\n        from: index,\n        key: key\n    }\n}\n\nfunction keyIndex(children) {\n    var keys = {}\n    var free = []\n    var length = children.length\n\n    for (var i = 0; i < length; i++) {\n        var child = children[i]\n\n        if (child.key) {\n            keys[child.key] = i\n        } else {\n            free.push(i)\n        }\n    }\n\n    return {\n        keys: keys,     // A hash of key name to index\n        free: free      // An array of unkeyed item indices\n    }\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n","var diff = require(\"./vtree/diff.js\")\n\nmodule.exports = diff\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook.js\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, propName, propValue, previous);\n        } else if (isHook(propValue)) {\n            removeProperty(node, propName, propValue, previous)\n            if (propValue.hook) {\n                propValue.hook(node,\n                    propName,\n                    previous ? previous[propName] : undefined)\n            }\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, propName, propValue, previous) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        } else if (previousValue.unhook) {\n            previousValue.unhook(node, propName, propValue)\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n","var document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"../vnode/is-vnode.js\")\nvar isVText = require(\"../vnode/is-vtext.js\")\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar handleThunk = require(\"../vnode/handle-thunk.js\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n","// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n","var isWidget = require(\"../vnode/is-widget.js\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n","var applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar VPatch = require(\"../vnode/vpatch.js\")\n\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = renderOptions.render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = renderOptions.render(vText, renderOptions)\n\n        if (parentNode && newNode !== domNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    var updating = updateWidget(leftVNode, widget)\n    var newNode\n\n    if (updating) {\n        newNode = widget.update(leftVNode, domNode) || domNode\n    } else {\n        newNode = renderOptions.render(widget, renderOptions)\n    }\n\n    var parentNode = domNode.parentNode\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    if (!updating) {\n        destroyWidget(domNode, leftVNode)\n    }\n\n    return newNode\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = renderOptions.render(vNode, renderOptions)\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, moves) {\n    var childNodes = domNode.childNodes\n    var keyMap = {}\n    var node\n    var remove\n    var insert\n\n    for (var i = 0; i < moves.removes.length; i++) {\n        remove = moves.removes[i]\n        node = childNodes[remove.from]\n        if (remove.key) {\n            keyMap[remove.key] = node\n        }\n        domNode.removeChild(node)\n    }\n\n    var length = childNodes.length\n    for (var j = 0; j < moves.inserts.length; j++) {\n        insert = moves.inserts[j]\n        node = keyMap[insert.key]\n        // this is the weirdest bug i've ever seen in webkit\n        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n","var document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar render = require(\"./create-element\")\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches, renderOptions) {\n    renderOptions = renderOptions || {}\n    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch\n        ? renderOptions.patch\n        : patchRecursive\n    renderOptions.render = renderOptions.render || render\n\n    return renderOptions.patch(rootNode, patches, renderOptions)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions.document && ownerDocument !== document) {\n        renderOptions.document = ownerDocument\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n","var patch = require(\"./vdom/patch.js\")\n\nmodule.exports = patch\n","var version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var hasThunks = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property) && property.unhook) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!hasThunks && child.hasThunks) {\n                hasThunks = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        } else if (!hasThunks && isThunk(child)) {\n            hasThunks = true;\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hasThunks = hasThunks\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n","var version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n","/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * ECMAScript compliant, uniform cross-browser split method\n */\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * split('a b c d', ' ');\n * // -> ['a', 'b', 'c', 'd']\n *\n * // With limit\n * split('a b c d', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n */\nmodule.exports = (function split(undef) {\n\n  var nativeSplit = String.prototype.split,\n    compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n    // NPCG: nonparticipating capturing group\n    self;\n\n  self = function(str, separator, limit) {\n    // If `separator` is not a regex, use `nativeSplit`\n    if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n      return nativeSplit.call(str, separator, limit);\n    }\n    var output = [],\n      flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + // Proposed for ES6\n      (separator.sticky ? \"y\" : \"\"),\n      // Firefox 3+\n      lastLastIndex = 0,\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator = new RegExp(separator.source, flags + \"g\"),\n      separator2, match, lastIndex, lastLength;\n    str += \"\"; // Type-convert\n    if (!compliantExecNpcg) {\n      // Doesn't need flags gy, but they don't hurt\n      separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n    }\n    /* Values for `limit`, per the spec:\n     * If undefined: 4294967295 // Math.pow(2, 32) - 1\n     * If 0, Infinity, or NaN: 0\n     * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n     * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n     * If other: Type-convert, then use the above rules\n     */\n    limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n    limit >>> 0; // ToUint32(limit)\n    while (match = separator.exec(str)) {\n      // `separator.lastIndex` is not reliable cross-browser\n      lastIndex = match.index + match[0].length;\n      if (lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index));\n        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n        // nonparticipating capturing groups\n        if (!compliantExecNpcg && match.length > 1) {\n          match[0].replace(separator2, function() {\n            for (var i = 1; i < arguments.length - 2; i++) {\n              if (arguments[i] === undef) {\n                match[i] = undef;\n              }\n            }\n          });\n        }\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1));\n        }\n        lastLength = match[0].length;\n        lastLastIndex = lastIndex;\n        if (output.length >= limit) {\n          break;\n        }\n      }\n      if (separator.lastIndex === match.index) {\n        separator.lastIndex++; // Avoid an infinite loop\n      }\n    }\n    if (lastLastIndex === str.length) {\n      if (lastLength || !separator.test(\"\")) {\n        output.push(\"\");\n      }\n    } else {\n      output.push(str.slice(lastLastIndex));\n    }\n    return output.length > limit ? output.slice(0, limit) : output;\n  };\n\n  return self;\n})();\n","'use strict';\n\nvar split = require('browser-split');\n\nvar classIdSplit = /([\\.#]?[a-zA-Z0-9\\u007F-\\uFFFF_:-]+)/;\nvar notClassId = /^\\.|#/;\n\nmodule.exports = parseTag;\n\nfunction parseTag(tag, props) {\n    if (!tag) {\n        return 'DIV';\n    }\n\n    var noId = !(props.hasOwnProperty('id'));\n\n    var tagParts = split(tag, classIdSplit);\n    var tagName = null;\n\n    if (notClassId.test(tagParts[1])) {\n        tagName = 'DIV';\n    }\n\n    var classes, part, type, i;\n\n    for (i = 0; i < tagParts.length; i++) {\n        part = tagParts[i];\n\n        if (!part) {\n            continue;\n        }\n\n        type = part.charAt(0);\n\n        if (!tagName) {\n            tagName = part;\n        } else if (type === '.') {\n            classes = classes || [];\n            classes.push(part.substring(1, part.length));\n        } else if (type === '#' && noId) {\n            props.id = part.substring(1, part.length);\n        }\n    }\n\n    if (classes) {\n        if (props.className) {\n            classes.push(props.className);\n        }\n\n        props.className = classes.join(' ');\n    }\n\n    return props.namespace ? tagName : tagName.toUpperCase();\n}\n","'use strict';\n\nmodule.exports = SoftSetHook;\n\nfunction SoftSetHook(value) {\n    if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n    }\n\n    this.value = value;\n}\n\nSoftSetHook.prototype.hook = function (node, propertyName) {\n    if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n    }\n};\n","'use strict';\n\n/*global window, global*/\n\nvar root = typeof window !== 'undefined' ?\n    window : typeof global !== 'undefined' ?\n    global : {};\n\nmodule.exports = Individual;\n\nfunction Individual(key, value) {\n    if (key in root) {\n        return root[key];\n    }\n\n    root[key] = value;\n\n    return value;\n}\n","'use strict';\n\nvar Individual = require('./index.js');\n\nmodule.exports = OneVersion;\n\nfunction OneVersion(moduleName, version, defaultValue) {\n    var key = '__INDIVIDUAL_ONE_VERSION_' + moduleName;\n    var enforceKey = key + '_ENFORCE_SINGLETON';\n\n    var versionValue = Individual(enforceKey, version);\n\n    if (versionValue !== version) {\n        throw new Error('Can only have one copy of ' +\n            moduleName + '.\\n' +\n            'You already have version ' + versionValue +\n            ' installed.\\n' +\n            'This means you cannot install version ' + version);\n    }\n\n    return Individual(key, defaultValue);\n}\n","'use strict';\n\nvar OneVersionConstraint = require('individual/one-version');\n\nvar MY_VERSION = '7';\nOneVersionConstraint('ev-store', MY_VERSION);\n\nvar hashKey = '__EV_STORE_KEY@' + MY_VERSION;\n\nmodule.exports = EvStore;\n\nfunction EvStore(elem) {\n    var hash = elem[hashKey];\n\n    if (!hash) {\n        hash = elem[hashKey] = {};\n    }\n\n    return hash;\n}\n","'use strict';\n\nvar EvStore = require('ev-store');\n\nmodule.exports = EvHook;\n\nfunction EvHook(value) {\n    if (!(this instanceof EvHook)) {\n        return new EvHook(value);\n    }\n\n    this.value = value;\n}\n\nEvHook.prototype.hook = function (node, propertyName) {\n    var es = EvStore(node);\n    var propName = propertyName.substr(3);\n\n    es[propName] = this.value;\n};\n\nEvHook.prototype.unhook = function(node, propertyName) {\n    var es = EvStore(node);\n    var propName = propertyName.substr(3);\n\n    es[propName] = undefined;\n};\n","'use strict';\n\nvar isArray = require('x-is-array');\n\nvar VNode = require('../vnode/vnode.js');\nvar VText = require('../vnode/vtext.js');\nvar isVNode = require('../vnode/is-vnode');\nvar isVText = require('../vnode/is-vtext');\nvar isWidget = require('../vnode/is-widget');\nvar isHook = require('../vnode/is-vhook');\nvar isVThunk = require('../vnode/is-thunk');\n\nvar parseTag = require('./parse-tag.js');\nvar softSetHook = require('./hooks/soft-set-hook.js');\nvar evHook = require('./hooks/ev-hook.js');\n\nmodule.exports = h;\n\nfunction h(tagName, properties, children) {\n    var childNodes = [];\n    var tag, props, key, namespace;\n\n    if (!children && isChildren(properties)) {\n        children = properties;\n        props = {};\n    }\n\n    props = props || properties || {};\n    tag = parseTag(tagName, props);\n\n    // support keys\n    if (props.hasOwnProperty('key')) {\n        key = props.key;\n        props.key = undefined;\n    }\n\n    // support namespace\n    if (props.hasOwnProperty('namespace')) {\n        namespace = props.namespace;\n        props.namespace = undefined;\n    }\n\n    // fix cursor bug\n    if (tag === 'INPUT' &&\n        !namespace &&\n        props.hasOwnProperty('value') &&\n        props.value !== undefined &&\n        !isHook(props.value)\n    ) {\n        props.value = softSetHook(props.value);\n    }\n\n    transformProperties(props);\n\n    if (children !== undefined && children !== null) {\n        addChild(children, childNodes, tag, props);\n    }\n\n\n    return new VNode(tag, props, childNodes, key, namespace);\n}\n\nfunction addChild(c, childNodes, tag, props) {\n    if (typeof c === 'string') {\n        childNodes.push(new VText(c));\n    } else if (typeof c === 'number') {\n        childNodes.push(new VText(String(c)));\n    } else if (isChild(c)) {\n        childNodes.push(c);\n    } else if (isArray(c)) {\n        for (var i = 0; i < c.length; i++) {\n            addChild(c[i], childNodes, tag, props);\n        }\n    } else if (c === null || c === undefined) {\n        return;\n    } else {\n        throw UnexpectedVirtualElement({\n            foreignObject: c,\n            parentVnode: {\n                tagName: tag,\n                properties: props\n            }\n        });\n    }\n}\n\nfunction transformProperties(props) {\n    for (var propName in props) {\n        if (props.hasOwnProperty(propName)) {\n            var value = props[propName];\n\n            if (isHook(value)) {\n                continue;\n            }\n\n            if (propName.substr(0, 3) === 'ev-') {\n                // add ev-foo support\n                props[propName] = evHook(value);\n            }\n        }\n    }\n}\n\nfunction isChild(x) {\n    return isVNode(x) || isVText(x) || isWidget(x) || isVThunk(x);\n}\n\nfunction isChildren(x) {\n    return typeof x === 'string' || isArray(x) || isChild(x);\n}\n\nfunction UnexpectedVirtualElement(data) {\n    var err = new Error();\n\n    err.type = 'virtual-hyperscript.unexpected.virtual-element';\n    err.message = 'Unexpected virtual child passed to h().\\n' +\n        'Expected a VNode / Vthunk / VWidget / string but:\\n' +\n        'got:\\n' +\n        errorString(data.foreignObject) +\n        '.\\n' +\n        'The parent vnode is:\\n' +\n        errorString(data.parentVnode)\n        '\\n' +\n        'Suggested fix: change your `h(..., [ ... ])` callsite.';\n    err.foreignObject = data.foreignObject;\n    err.parentVnode = data.parentVnode;\n\n    return err;\n}\n\nfunction errorString(obj) {\n    try {\n        return JSON.stringify(obj, null, '    ');\n    } catch (e) {\n        return String(obj);\n    }\n}\n","var h = require(\"./virtual-hyperscript/index.js\")\n\nmodule.exports = h\n","var createElement = require(\"./vdom/create-element.js\")\n\nmodule.exports = createElement\n","var diff = require(\"./diff.js\")\r\nvar patch = require(\"./patch.js\")\r\nvar h = require(\"./h.js\")\r\nvar create = require(\"./create-element.js\")\r\nvar VNode = require('./vnode/vnode.js')\r\nvar VText = require('./vnode/vtext.js')\r\n\r\nmodule.exports = {\r\n    diff: diff,\r\n    patch: patch,\r\n    h: h,\r\n    create: create,\r\n    VNode: VNode,\r\n    VText: VText\r\n}\r\n","export const types = Object.freeze({\n  TOGGLE_FORM: 'TOGGLE_FORM',\n  SET_MEAL: 'SET_MEAL',\n  SET_CALORIES: 'SET_CALORIES',\n  SAVE_MEAL: 'SAVE_MEAL',\n  STORE_STATE: 'STORE_STATE',\n});\n\n// STORE_STATE:\nexport const storeLocalStorageStateCommand = Object.freeze({\n  type: types.STORE_STATE,\n});\n\n// SAVE_MEAL:\nexport const saveMealCommand = Object.freeze({\n  type: types.SAVE_MEAL,\n});\n\n// SET_CALORIES_INPUT:\nexport function setMealCommand(meal) {\n  return {\n    type: types.SET_MEAL,\n    meal,\n  };\n}\n// SET_CALORIES:\nexport function setCaloriesCommand(calories) {\n  return {\n    type: types.SET_CALORIES,\n    calories,\n  };\n}\n\n// TOGGLE_FORM (hide)\nexport function hideFormCommand(showForm = false) {\n  return {\n    type: types.TOGGLE_FORM,\n    showForm,\n  };\n}\n\n// TOGGLE_FORM (show)\nexport function showFormCommand(showForm = true) {\n  return {\n    type: types.TOGGLE_FORM,\n    showForm,\n  };\n}\n","import { h, diff, patch } from 'virtual-dom';\nimport createElement from 'virtual-dom/create-element';\nimport { storeLocalStorageStateCommand } from './Commands';\n\n/** impure */\n\nexport function bootstrap(initialState, view, reduce, node) {\n  let state = initialState;\n  let currentView = view(dispatch, state);\n  let virtualNode = createElement(currentView);\n\n  node.appendChild(virtualNode);\n\n  function dispatch(type) {\n    const newState = reduce(type, state);\n    const newView = view(dispatch, newState);\n    const patches = diff(currentView, newView);\n\n    virtualNode = patch(virtualNode, patches);\n    currentView = newView;\n    state = newState;\n  }\n\n  window.addEventListener('unload', () => dispatch(storeLocalStorageStateCommand), false);\n}\n","export const initialState = {\n  meal: '',\n  calories: 0,\n  showForm: false,\n  nextId: 1,\n  editId: null,\n  meals: [],\n};\n",null,"import { initialState } from './Model';\nimport { version, name } from '../../package.json';\n\n/** state management */\n\nexport const _key = `com.github.daggerok:${name}:${version}`;\n\nfunction fallback(json) {\n  if (!json || '{}' === json) {\n    return JSON.stringify(initialState);\n  }\n  return json;\n}\n\nexport const getStorage = () =>\n  JSON.parse(fallback(localStorage.getItem(_key)));\n\nexport const setStorage = (state) =>\n  localStorage.setItem(_key, JSON.stringify(state));\n","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","import * as R from 'ramda';\nimport { setStorage } from './Storage';\nimport { types } from './Commands';\n\n/** main reducer */\n\nexport function reduce(command, state) {\n  const { type } = command;\n\n  switch (type) {\n\n    case types.TOGGLE_FORM:\n      const { showForm } = command;\n      return { ...state, showForm };\n\n    case types.SET_MEAL:\n      const { meal } = command;\n      return { ...state, meal };\n\n    case types.SET_CALORIES:\n      // const { calories } = command;\n      const calories = R.pipe(\n        ({ calories }) => calories,\n        parseInt,\n        R.defaultTo(0),\n      )(command);\n      return { ...state, calories };\n\n    case types.SAVE_MEAL:\n      const { meal: mealToSave, calories: caloriesToSave, meals, nextId } = state;\n      const isInvalidState = !mealToSave || !mealToSave.trim().length;\n      const nextIdToSave = isInvalidState ? nextId : nextId + 1;\n      return {\n        ...state,\n        meals: [\n          ...meals,\n          isInvalidState ? undefined : {\n            id: nextId,\n            meal: mealToSave,\n            calories: caloriesToSave,\n          },\n        ].filter(m => !!m),\n        meal: isInvalidState ? mealToSave : '',\n        calories: isInvalidState ? caloriesToSave : 0,\n        showForm: isInvalidState,\n        nextId: nextIdToSave,\n      };\n\n    case types.STORE_STATE:\n      setStorage(state);\n      return { ...state };\n\n    default:\n      return { ...state };\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar isValidString = function isValidString(param) {\n  return typeof param === 'string' && param.length > 0;\n};\n\nvar startsWith = function startsWith(string, start) {\n  return string[0] === start;\n};\n\nvar isSelector = function isSelector(param) {\n  return isValidString(param) && (startsWith(param, '.') || startsWith(param, '#'));\n};\n\nvar node = function node(h) {\n  return function (tagName) {\n    return function (first) {\n      for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (isSelector(first)) {\n        return h.apply(undefined, [tagName + first].concat(rest));\n      } else if (typeof first === 'undefined') {\n        return h(tagName);\n      } else {\n        return h.apply(undefined, [tagName, first].concat(rest));\n      }\n    };\n  };\n};\n\nvar TAG_NAMES = ['a', 'abbr', 'acronym', 'address', 'applet', 'area', 'article', 'aside', 'audio', 'b', 'base', 'basefont', 'bdi', 'bdo', 'bgsound', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command', 'content', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'image', 'img', 'input', 'ins', 'isindex', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'listing', 'main', 'map', 'mark', 'marquee', 'math', 'menu', 'menuitem', 'meta', 'meter', 'multicol', 'nav', 'nextid', 'nobr', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'plaintext', 'pre', 'progress', 'q', 'rb', 'rbc', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'shadow', 'slot', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'svg', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr', 'xmp'];\n\nexports['default'] = function (h) {\n  var createTag = node(h);\n  var exported = { TAG_NAMES: TAG_NAMES, isSelector: isSelector, createTag: createTag };\n  TAG_NAMES.forEach(function (n) {\n    exported[n] = createTag(n);\n  });\n  return exported;\n};\n\nmodule.exports = exports['default'];","import hh from 'hyperscript-helpers';\nimport { h } from 'virtual-dom';\nimport { hideFormCommand, showFormCommand, setCaloriesCommand, setMealCommand, saveMealCommand } from './Commands';\n\nconst { div, h1, hr, button, form, label, input, pre } = hh(h);\n\nfunction fieldSetView(labelText, inputValue, oninput) {\n  return div([\n    label({ className: 'db mb1' }, labelText),\n    input({\n      className: 'pa2 input-reset ba w-100 mb2',\n      type: 'text',\n      value: inputValue,\n      oninput,\n    }),\n  ]);\n}\n\nfunction buttonSetView(dispatch) {\n  return div({ className: 'center w-100 mw5 cf' }, [\n    button({\n      className: 'f3 pv2 ph3 bg-blue white bn dim fl mr2',\n      type: 'submit',\n    }, 'Save'),\n    button({\n      className: 'f3 pv2 ph3 bg-blue white bn dim fr ',\n      type: 'button',\n      onclick: () => dispatch(hideFormCommand()),\n    }, 'Cancel'),\n  ]);\n}\n\nfunction formView(dispatch, state) {\n  const { meal, calories, showForm } = state;\n  if (showForm) {\n    return form({ onsubmit: e => {\n        e.preventDefault();\n        dispatch(saveMealCommand);\n    }}, [\n      fieldSetView('Meal', meal, e => dispatch(setMealCommand(e.target.value))),\n      fieldSetView('Calories', calories || '', e => dispatch(setCaloriesCommand(e.target.value))),\n      buttonSetView(dispatch),\n    ]);\n  }\n  return button({\n    className: 'f1 pv2 ph3 bg-blue white bn dim',\n    onclick: () => dispatch(showFormCommand()),\n  }, 'Add meal');\n}\n\nexport function view(dispatch, state) {\n  return div({ className: 'sans-serif bg-white pa3 mv1' }, [\n    h1({ className: 'mw5 w-100 center' }, 'Calories Counter'),\n    div({ className: 'w-100 center mw5' },\n      formView(dispatch, state)\n    ),\n    pre(JSON.stringify(state, null, 2)),\n  ]);\n}\n","import { bootstrap } from './app/Bootstrap';\nimport { getStorage } from './app/Storage';\nimport { reduce } from './app/Reducer';\nimport { view } from './app/View';\n\nconst app = document.querySelector('#app');\nconst state = getStorage();\n\nbootstrap(state, view, reduce, app);\n"]}