env:
  global:
  - TERM=dumb

language: node_js
node_js: lts/*

addons:
  apt:
    update: true
    packages:
    - python-pip
    - curl

install: true
before_script:
- sudo pip install httpie >/dev/null 2>&1
#
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
- sudo apt update -y >/dev/null 2>&1 || true
- sudo apt install --no-install-recommends -y yarn >/dev/null 2>&1
#
- yarn global add npm-check-updates
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 5432 5672 27017 3000 8000 8080 80

script:
- export root=$(pwd)

- >
  for path in \
    functional-js/functional-calorie-counter-app \
    functional-js/virtual-dom-counter-app \
    functional-js/pure-counter-app \
    functional-js/counter-app \
    functional-js/calorie-counter-app \
    functional-js/ramda-functional-composition \
    functional-js/ramda-currying \
    functional-js/high-order-functions \
    functional-js/starter \
  ; do
    cd $root/$path
    npm i
    npm run build
    npm run predeploy
    npm run postdeploy
    if [ -f npm-debug.log ]; then cat npm-debug.log; fi
  done;

#- cd $root/using-fetch
#- yarn -ii
#- yarn start &
#- wait_for 3000
#- http :3000
#- stop_any 3000
#
#- >
#  for path in \
#    materialize-bcrypt \
#    material-design-lite \
#    strategy-js \
#    observer-js \
#    using-fetch \
#    flex \
#    06-patterns/07-publish-subscriber \
#    06-patterns/06-observer \
#    06-patterns/05-constructor \
#    06-patterns/04-decorator \
#    06-patterns/03-facade \
#    06-patterns/02-factory \
#    06-patterns/01-strategy \
#    05-mustache-jquery-cycle-bootswatch \
#    04-vanilla-js-jquery \
#    03-vanilla-js-jsonp \
#    02-vanilla-js-remote-json \
#    01-init-vanilla-js
#  do
#    export TARGET="$root/$path"
#    cd $TARGET
#
#    yarn -i
#    yarn predeploy
#    if [ ".observer-js" != ".$path" ]; then yarn postdeploy; fi;
#    if [ -f npm-debug.log ]; then cat npm-debug.log; fi
#
#    ncu
#    ncu -u
#    yarn -i
#    yarn upgrade
#    if [ -f npm-debug.log ]; then cat npm-debug.log; fi
#  done;

cache:
  directories:
  - node_modules
  - $HOME/.nvm
  - $HOME/.npm
  - $HOME/.npm-global
  - $HOME/.npmrc
  - $HOME/.yarn
  - $HOME/.node-gyp
